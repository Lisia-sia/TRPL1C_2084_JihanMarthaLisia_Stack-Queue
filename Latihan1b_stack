import 'dart:io';

class Stack<T> {
  final List<T> _stack = [];
  
  void push(T element) {
    _stack.add(element);
  }
  
  T pop() {
    if (_stack.isEmpty) {
      throw StateError("No elements in the Stack");
    } else {
      T lastElement = _stack.last;
      _stack.removeLast();
      return lastElement;
    }
  }
  
  bool isEmpty() {
    return _stack.isEmpty;
  }
}

class PalindromeChecker {
  // Fungsi untuk membalik kalimat menggunakan stack
  String reverseString(String input) {
    Stack<String> stack = Stack<String>();
    
    // Push semua karakter ke stack
    for (int i = 0; i < input.length; i++) {
      stack.push(input[i]);
    }
    
    // Pop dari stack untuk mendapatkan string terbalik
    String reversed = "";
    while (!stack.isEmpty()) {
      reversed += stack.pop();
    }
    
    return reversed;
  }
  
  // Fungsi untuk mengecek apakah string palindrom
  bool isPalindrome(String input) {
    String reversed = reverseString(input);
    return input == reversed;
  }
}

void main() {
  PalindromeChecker checker = PalindromeChecker();
  
  stdout.write("Masukkan kalimat : ");
  String input = stdin.readLineSync()!;
  
  String reversed = checker.reverseString(input);
  bool isPalindrome = checker.isPalindrome(input);
  
  print("Hasil = $reversed");
  if (isPalindrome) {
    print("Palindrom");
  } else {
    print("Bukan palindrom");
  }
}
